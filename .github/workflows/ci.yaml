on:
  pull_request: {}
  push: {}

jobs:
  publish:
    needs: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # for later steps to use a different authentication
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - run: npm install
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.get-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  # The ci-matrix job ends up as multiple jobs and therefore as multiple checks.
  # Each check's name ends up with the node version appended.
  # If we were to use those checks as required checks, we would have to occasionally bump them.
  # This job allows us to have a single check that we don't have to bump.
  ci:
    needs: ci-matrix
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
  ci-matrix:
    needs: get-supported-node-versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.get-supported-node-versions.outputs.versions) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # for commit linting
      # Hiding tsconfig.json to workaround
      # https://github.com/conventional-changelog/commitlint/issues/3256
      - run: mv tsconfig.json tsconfig.json.nope
      - uses: wagoid/commitlint-github-action@v5
      - run: mv tsconfig.json.nope tsconfig.json
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm --global install npm@latest
      - run: npm install
      - run: npm test
  get-supported-node-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: get
        run: |
          set -euxo pipefail
          active_versions=$(bash get-node-supported-versions.sh)
          echo "active=$active_versions" >> "$GITHUB_OUTPUT"
    outputs:
      versions: ${{ steps.get.outputs.active }}
